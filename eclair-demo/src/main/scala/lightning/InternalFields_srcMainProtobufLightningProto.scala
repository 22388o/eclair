// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package lightning


import com.trueaccord.scalapb.Descriptors

object InternalFields_srcMainProtobufLightningProto {
  def internalFieldsFor(scalaName: String): Seq[Descriptors.FieldDescriptor] = scalaName match {
    case "lightning.sha256_hash" => Seq(Descriptors.FieldDescriptor(0, 1, "a", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "b", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(2, 3, "c", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(3, 4, "d", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None))
    case "lightning.signature" => Seq(Descriptors.FieldDescriptor(0, 1, "r1", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "r2", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(2, 3, "r3", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(3, 4, "r4", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(4, 5, "s1", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(5, 6, "s2", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(6, 7, "s3", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(7, 8, "s4", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.FIXED64), isPacked = false, containingOneofName = None))
    case "lightning.locktime" => Seq(Descriptors.FieldDescriptor(0, 1, "seconds", Descriptors.Optional, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = Some("locktime")), Descriptors.FieldDescriptor(1, 2, "blocks", Descriptors.Optional, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = Some("locktime")))
    case "lightning.bitcoin_pubkey" => Seq(Descriptors.FieldDescriptor(0, 1, "key", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.BYTE_STRING, com.google.protobuf.Descriptors.FieldDescriptor.Type.BYTES), isPacked = false, containingOneofName = None))
    case "lightning.open_channel" => Seq(Descriptors.FieldDescriptor(0, 2, "delay", Descriptors.Required, Descriptors.MessageType(lightning.locktime.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 4, "revocation_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(2, 5, "commit_key", Descriptors.Required, Descriptors.MessageType(lightning.bitcoin_pubkey.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(3, 1, "final_key", Descriptors.Required, Descriptors.MessageType(lightning.bitcoin_pubkey.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(4, 6, "anch", Descriptors.Required, Descriptors.EnumType(lightning.open_channel.anchor_offer.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(5, 7, "min_depth", Descriptors.Optional, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(6, 8, "commitment_fee", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT64), isPacked = false, containingOneofName = None))
    case "lightning.open_anchor" => Seq(Descriptors.FieldDescriptor(0, 1, "txid", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "output_index", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.INT, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT32), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(2, 3, "amount", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(3, 4, "commit_sig", Descriptors.Required, Descriptors.MessageType(lightning.signature.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.open_commit_sig" => Seq(Descriptors.FieldDescriptor(0, 1, "sig", Descriptors.Required, Descriptors.MessageType(lightning.signature.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.open_complete" => Seq(Descriptors.FieldDescriptor(0, 1, "blockid", Descriptors.Optional, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.update" => Seq(Descriptors.FieldDescriptor(0, 1, "revocation_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "delta", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.SINT64), isPacked = false, containingOneofName = None))
    case "lightning.update_add_htlc" => Seq(Descriptors.FieldDescriptor(0, 1, "revocation_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "amount", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT64), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(2, 3, "r_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(3, 4, "expiry", Descriptors.Required, Descriptors.MessageType(lightning.locktime.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.update_complete_htlc" => Seq(Descriptors.FieldDescriptor(0, 1, "revocation_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 3, "r", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.update_remove_htlc" => Seq(Descriptors.FieldDescriptor(0, 1, "revocation_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 3, "r_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.update_remove_htlc_delay" => Seq(Descriptors.FieldDescriptor(0, 1, "r_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.update_accept" => Seq(Descriptors.FieldDescriptor(0, 1, "sig", Descriptors.Required, Descriptors.MessageType(lightning.signature.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 3, "revocation_hash", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.update_signature" => Seq(Descriptors.FieldDescriptor(0, 1, "sig", Descriptors.Required, Descriptors.MessageType(lightning.signature.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "revocation_preimage", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.update_complete" => Seq(Descriptors.FieldDescriptor(0, 1, "revocation_preimage", Descriptors.Required, Descriptors.MessageType(lightning.sha256_hash.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.close_channel" => Seq(Descriptors.FieldDescriptor(0, 1, "sig", Descriptors.Required, Descriptors.MessageType(lightning.signature.descriptor), isPacked = false, containingOneofName = None), Descriptors.FieldDescriptor(1, 2, "close_fee", Descriptors.Required, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.LONG, com.google.protobuf.Descriptors.FieldDescriptor.Type.UINT64), isPacked = false, containingOneofName = None))
    case "lightning.close_channel_complete" => Seq(Descriptors.FieldDescriptor(0, 1, "sig", Descriptors.Required, Descriptors.MessageType(lightning.signature.descriptor), isPacked = false, containingOneofName = None))
    case "lightning.error" => Seq(Descriptors.FieldDescriptor(0, 1, "problem", Descriptors.Optional, Descriptors.PrimitiveType(com.google.protobuf.Descriptors.FieldDescriptor.JavaType.STRING, com.google.protobuf.Descriptors.FieldDescriptor.Type.STRING), isPacked = false, containingOneofName = None))
    case "lightning.pkt" => Seq(Descriptors.FieldDescriptor(0, 201, "open", Descriptors.Optional, Descriptors.MessageType(lightning.open_channel.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(1, 202, "open_anchor", Descriptors.Optional, Descriptors.MessageType(lightning.open_anchor.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(2, 203, "open_commit_sig", Descriptors.Optional, Descriptors.MessageType(lightning.open_commit_sig.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(3, 204, "open_complete", Descriptors.Optional, Descriptors.MessageType(lightning.open_complete.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(4, 1, "update", Descriptors.Optional, Descriptors.MessageType(lightning.update.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(5, 2, "update_add_htlc", Descriptors.Optional, Descriptors.MessageType(lightning.update_add_htlc.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(6, 3, "update_accept", Descriptors.Optional, Descriptors.MessageType(lightning.update_accept.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(7, 4, "update_signature", Descriptors.Optional, Descriptors.MessageType(lightning.update_signature.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(8, 5, "update_complete", Descriptors.Optional, Descriptors.MessageType(lightning.update_complete.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(9, 6, "update_complete_htlc", Descriptors.Optional, Descriptors.MessageType(lightning.update_complete_htlc.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(10, 7, "update_remove_htlc", Descriptors.Optional, Descriptors.MessageType(lightning.update_remove_htlc.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(11, 8, "update_remove_htlc_delay", Descriptors.Optional, Descriptors.MessageType(lightning.update_remove_htlc_delay.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(12, 401, "close", Descriptors.Optional, Descriptors.MessageType(lightning.close_channel.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(13, 402, "close_complete", Descriptors.Optional, Descriptors.MessageType(lightning.close_channel_complete.descriptor), isPacked = false, containingOneofName = Some("pkt")), Descriptors.FieldDescriptor(14, 1000, "error", Descriptors.Optional, Descriptors.MessageType(lightning.error.descriptor), isPacked = false, containingOneofName = Some("pkt")))
  }
}