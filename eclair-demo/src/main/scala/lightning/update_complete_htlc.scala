// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package lightning


import com.trueaccord.scalapb.Descriptors

@SerialVersionUID(0L)
final case class update_complete_htlc(
    revocationHash: lightning.sha256_hash,
    r: lightning.sha256_hash
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[update_complete_htlc] with com.trueaccord.lenses.Updatable[update_complete_htlc] {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(revocationHash.serializedSize) + revocationHash.serializedSize
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(r.serializedSize) + r.serializedSize
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(revocationHash.serializedSize)
      revocationHash.writeTo(output)
      output.writeTag(3, 2)
      output.writeRawVarint32(r.serializedSize)
      r.writeTo(output)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): lightning.update_complete_htlc = {
      var __revocationHash = this.revocationHash
      var __r = this.r
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __revocationHash = com.trueaccord.scalapb.LiteParser.readMessage(__input, __revocationHash)
          case 26 =>
            __r = com.trueaccord.scalapb.LiteParser.readMessage(__input, __r)
          case tag => __input.skipField(tag)
        }
      }
      lightning.update_complete_htlc(
          revocationHash = __revocationHash,
          r = __r
      )
    }
    def withRevocationHash(__v: lightning.sha256_hash): update_complete_htlc = copy(revocationHash = __v)
    def withR(__v: lightning.sha256_hash): update_complete_htlc = copy(r = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => revocationHash
        case 3 => r
      }
    }
    def companion = lightning.update_complete_htlc
}

object update_complete_htlc extends com.trueaccord.scalapb.GeneratedMessageCompanion[update_complete_htlc]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[update_complete_htlc]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): lightning.update_complete_htlc = lightning.update_complete_htlc(
    revocationHash = fieldsMap(1).asInstanceOf[lightning.sha256_hash],
    r = fieldsMap(3).asInstanceOf[lightning.sha256_hash]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("update_complete_htlc", this,
    None, m = Seq(),
    e = Seq(),
    f = lightning.InternalFields_srcMainProtobufLightningProto.internalFieldsFor("lightning.update_complete_htlc"))
  lazy val defaultInstance = lightning.update_complete_htlc(
    revocationHash = lightning.sha256_hash.defaultInstance,
    r = lightning.sha256_hash.defaultInstance
  )
  implicit class update_complete_htlcLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, update_complete_htlc]) extends com.trueaccord.lenses.ObjectLens[UpperPB, update_complete_htlc](_l) {
    def revocationHash: com.trueaccord.lenses.Lens[UpperPB, lightning.sha256_hash] = field(_.revocationHash)((c_, f_) => c_.copy(revocationHash = f_))
    def r: com.trueaccord.lenses.Lens[UpperPB, lightning.sha256_hash] = field(_.r)((c_, f_) => c_.copy(r = f_))
  }
  final val REVOCATION_HASH_FIELD_NUMBER = 1
  final val R_FIELD_NUMBER = 3
}
