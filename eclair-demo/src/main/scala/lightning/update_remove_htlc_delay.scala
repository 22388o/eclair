// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package lightning


import com.trueaccord.scalapb.Descriptors

@SerialVersionUID(0L)
final case class update_remove_htlc_delay(
    rHash: lightning.sha256_hash
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[update_remove_htlc_delay] with com.trueaccord.lenses.Updatable[update_remove_htlc_delay] {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(rHash.serializedSize) + rHash.serializedSize
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(rHash.serializedSize)
      rHash.writeTo(output)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): lightning.update_remove_htlc_delay = {
      var __rHash = this.rHash
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __rHash = com.trueaccord.scalapb.LiteParser.readMessage(__input, __rHash)
          case tag => __input.skipField(tag)
        }
      }
      lightning.update_remove_htlc_delay(
          rHash = __rHash
      )
    }
    def withRHash(__v: lightning.sha256_hash): update_remove_htlc_delay = copy(rHash = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => rHash
      }
    }
    def companion = lightning.update_remove_htlc_delay
}

object update_remove_htlc_delay extends com.trueaccord.scalapb.GeneratedMessageCompanion[update_remove_htlc_delay]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[update_remove_htlc_delay]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): lightning.update_remove_htlc_delay = lightning.update_remove_htlc_delay(
    rHash = fieldsMap(1).asInstanceOf[lightning.sha256_hash]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("update_remove_htlc_delay", this,
    None, m = Seq(),
    e = Seq(),
    f = lightning.InternalFields_srcMainProtobufLightningProto.internalFieldsFor("lightning.update_remove_htlc_delay"))
  lazy val defaultInstance = lightning.update_remove_htlc_delay(
    rHash = lightning.sha256_hash.defaultInstance
  )
  implicit class update_remove_htlc_delayLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, update_remove_htlc_delay]) extends com.trueaccord.lenses.ObjectLens[UpperPB, update_remove_htlc_delay](_l) {
    def rHash: com.trueaccord.lenses.Lens[UpperPB, lightning.sha256_hash] = field(_.rHash)((c_, f_) => c_.copy(rHash = f_))
  }
  final val R_HASH_FIELD_NUMBER = 1
}
