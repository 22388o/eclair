// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package lightning


import com.trueaccord.scalapb.Descriptors

@SerialVersionUID(0L)
final case class update_signature(
    sig: lightning.signature,
    revocationPreimage: lightning.sha256_hash
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[update_signature] with com.trueaccord.lenses.Updatable[update_signature] {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(sig.serializedSize) + sig.serializedSize
      __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(revocationPreimage.serializedSize) + revocationPreimage.serializedSize
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      output.writeTag(1, 2)
      output.writeRawVarint32(sig.serializedSize)
      sig.writeTo(output)
      output.writeTag(2, 2)
      output.writeRawVarint32(revocationPreimage.serializedSize)
      revocationPreimage.writeTo(output)
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): lightning.update_signature = {
      var __sig = this.sig
      var __revocationPreimage = this.revocationPreimage
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __sig = com.trueaccord.scalapb.LiteParser.readMessage(__input, __sig)
          case 18 =>
            __revocationPreimage = com.trueaccord.scalapb.LiteParser.readMessage(__input, __revocationPreimage)
          case tag => __input.skipField(tag)
        }
      }
      lightning.update_signature(
          sig = __sig,
          revocationPreimage = __revocationPreimage
      )
    }
    def withSig(__v: lightning.signature): update_signature = copy(sig = __v)
    def withRevocationPreimage(__v: lightning.sha256_hash): update_signature = copy(revocationPreimage = __v)
    def getField(__field: Descriptors.FieldDescriptor): Any = {
      __field.number match {
        case 1 => sig
        case 2 => revocationPreimage
      }
    }
    def companion = lightning.update_signature
}

object update_signature extends com.trueaccord.scalapb.GeneratedMessageCompanion[update_signature]  {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[update_signature]  = this
  def fromFieldsMap(fieldsMap: Map[Int, Any]): lightning.update_signature = lightning.update_signature(
    sig = fieldsMap(1).asInstanceOf[lightning.signature],
    revocationPreimage = fieldsMap(2).asInstanceOf[lightning.sha256_hash]
  )
  lazy val descriptor = new Descriptors.MessageDescriptor("update_signature", this,
    None, m = Seq(),
    e = Seq(),
    f = lightning.InternalFields_srcMainProtobufLightningProto.internalFieldsFor("lightning.update_signature"))
  lazy val defaultInstance = lightning.update_signature(
    sig = lightning.signature.defaultInstance,
    revocationPreimage = lightning.sha256_hash.defaultInstance
  )
  implicit class update_signatureLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, update_signature]) extends com.trueaccord.lenses.ObjectLens[UpperPB, update_signature](_l) {
    def sig: com.trueaccord.lenses.Lens[UpperPB, lightning.signature] = field(_.sig)((c_, f_) => c_.copy(sig = f_))
    def revocationPreimage: com.trueaccord.lenses.Lens[UpperPB, lightning.sha256_hash] = field(_.revocationPreimage)((c_, f_) => c_.copy(revocationPreimage = f_))
  }
  final val SIG_FIELD_NUMBER = 1
  final val REVOCATION_PREIMAGE_FIELD_NUMBER = 2
}
