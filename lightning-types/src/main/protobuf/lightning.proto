syntax = "proto2";

import "scalapb/scalapb.proto";

// The outer layer handles encryption, authentication and message
// boundaries.

//
// Helper Types
//

// Protobufs don't have fixed-length fields, so these are a hack.
message signature {
  option (scalapb.message).extends = "lightning.SignatureToString";
  required fixed64 r1 = 1;
  required fixed64 r2 = 2;
  required fixed64 r3 = 3;
  required fixed64 r4 = 4;
  required fixed64 s1 = 5;
  required fixed64 s2 = 6;
  required fixed64 s3 = 7;
  required fixed64 s4 = 8;
}

// Pubkey for commitment transaction input.
message bitcoin_pubkey {
  option (scalapb.message).extends = "lightning.PubkeyToString";
  // Must be 33 bytes.
  required bytes key = 1;
}

message route_step {
  // Where to next?
  oneof next {
    // Actually, this is the last one
    bool end = 1;
    // Next lightning node.
    bitcoin_pubkey bitcoin = 2;
    // Other realms go here...
  }

  // How much to forward (difference is fee)
  required uint32 amount = 4;
};

message route {
  repeated route_step steps = 1;
};

message routing {
  required bytes info = 1;
}

//
// Packet Types
//

// Set channel params.
message authenticate {
  // Which node this is.
  required bitcoin_pubkey node_id = 1;
  // Signature of your session key. */
  required signature session_sig = 2;
};

// This is the union which defines all of them
message pkt {
  oneof pkt {
    // Start of connection
    authenticate auth = 50;
  }
}
